---
description: xcf Xcode MCP Server - Quick Reference
globs: 
alwaysApply: false
---
# XCF Quick Reference Guide üöÄ

## üéõÔ∏è XCF Core Actions

### Permissions & Project Management
| Action | Description | Example | Output |
|--------|-------------|---------|--------|
| `grant` | Grant Xcode automation | `grant` | Permissions granted |
| `show` | List open projects | `show` | 1. /path/to/project.xcodeproj |
| `open #` | Select project | `open 1` | Project selected |
| `current` | Show selected project | `current` | /path/to/current/project |

### Build & Execute
| Action | Description | Example | Output |
|--------|-------------|---------|--------|
| `build` | Build project | `build` | üê¶üìú Built successfully |
| `run` | Run project | `run` | üê¶üìú Ran successfully |

### System & Analysis
| Action | Description | Example | Output |
|--------|-------------|---------|--------|
| `env` | Show environment | `env` | [Environment variables] |
| `pwd` | Show current folder | `pwd` | /current/directory |
| `analyze <file>` | Analyze Swift code | `analyze main.swift` | Code analysis report |
| `lz <file>` | Quick code analysis | `lz main.swift` | Condensed analysis |

### Aliases
- `pwd` = `dir` = `path`
- `lz` = shorthand for `analyze`

### Quick Workflow
```bash
grant       # Authorize XCF
show        # List projects
open 1      # Select project
build       # Compile project
run         # Execute project
```

### Code Analysis Workflow
```bash
analyze main.swift   # Detailed analysis
lz main.swift        # Quick analysis
```

## üìã Core Commands

### Activation & Project Management
| Command | Description | Example | Output |
|---------|-------------|---------|--------|
| `show` | List open Xcode projects | `show` | 1. /path/to/project.xcodeproj |
| `open #` | Select project by number | `open 1` | [Selects project] |
| `current` | Show current project | `current` | Current project: /path/to/project.xcodeproj |

### Build & Run
| Command | Description | Example | Output |
|---------|-------------|---------|--------|
| `build` | Build current project | `build` | üê¶üìú Built successfully |
| `run` | Run current project | `run` | üê¶üìú Ran successfully |

### System Information
| Command | Description | Example | Output |
|---------|-------------|---------|--------|
| `env` | Show environment variables | `env` | [List of environment variables] |
| `pwd` | Show current folder | `pwd` | Current folder: /path/to/folder |
| `help` | Display all commands | `help` | [List of available commands] |

## üîç Path Resolution & Quoting

### Supported Path Types
- Current directory: `file.swift`
- Child directories: `src/file.swift`
- Parent directory: `../file.swift`
- Multiple directories up: `../../file.swift`
- Full system paths: `/Users/username/project/file.swift`

### Quoting Rules
- Use quotes for content with spaces
- Single `'` or double `"` quotes work
- Recommended for complex content

### Path Resolution Examples
```bash
read_file main.swift                   # Current directory
read_file src/utils.swift               # Child directory
read_file ../shared/config.swift        # Parent directory
write_file test.txt "Hello World"       # Simple content
write_file config.json '{"key": "value"}'  # JSON content
```

## üóÇÔ∏è File Operations
| Command | Description | Example |
|---------|-------------|---------|
| `read_file <file>` | Read file contents | `read_file main.swift` |
| `write_file <file> <content>` | Write to file | `write_file test.txt "Hello World"` |
| `edit_file <file> <start> <end> <content>` | Edit file lines | `edit_file main.swift 10 20 "Updated code"` |
| `delete_file <file>` | Delete file | `delete_file temp.txt` |
| `move_file <source> <destination>` | Move file | `move_file old.swift new.swift` |

## üìÇ Directory Operations
| Command | Description | Example |
|---------|-------------|---------|
| `cd_dir <path>` | Change directory | `cd_dir /path/to/project` |
| `read_dir [path] [ext]` | List directory contents | `read_dir . swift` |
| `add_dir <path>` | Create directory | `add_dir new_folder` |
| `rm_dir <path>` | Remove directory | `rm_dir old_folder` |
| `move_dir <source> <destination>` | Move directory | `move_dir old_dir new_dir` |

## üìÑ Xcode Document Operations
| Command | Description | Example |
|---------|-------------|---------|
| `open_doc <file>` | Open in Xcode | `open_doc main.swift` |
| `create_doc <file> [content]` | Create new document | `create_doc new.swift "import Foundation"` |
| `read_doc <file>` | Read Xcode document | `read_doc main.swift` |
| `save_doc <file>` | Save Xcode document | `save_doc main.swift` |
| `edit_doc <file> <start> <end> <content>` | Edit document | `edit_doc main.swift 10 20 "New code"` |
| `close_doc <file> <saving>` | Close document | `close_doc main.swift true` |

## üîç Code Analysis
| Command | Description | Example |
|---------|-------------|---------|
| `snippet <file> [start] [end]` | Extract code snippets | `snippet main.swift 10 20` |
| `analyzer <file> [start] [end]` | Analyze Swift code | `analyzer main.swift 10 50` |
| `lz <file>` | Shorthand analyzer | `lz main.swift` |

## ü§ñ AI Assistant MCP Tools
| Tool | Purpose | Example |
|------|---------|---------|
| `mcp_xcf_xcf` | Execute XCF actions | `mcp_xcf_xcf(action="build")` |
| `mcp_xcf_snippet` | Extract code snippets | `mcp_xcf_snippet(filePath="main.swift", entireFile=true)` |
| `mcp_xcf_analyzer` | Analyze Swift code | `mcp_xcf_analyzer(filePath="main.swift", entireFile=true)` |
| `mcp_xcf_read_file` | Read file contents | `mcp_xcf_read_file(filePath="main.swift")` |
| `mcp_xcf_write_file` | Write file contents | `mcp_xcf_write_file(filePath="test.txt", content="Hello World")` |

## üéÆ Standalone Action Tools
| Tool | Purpose | Example |
|------|---------|---------|
| `mcp_xcf_show_help` | Display help | `mcp_xcf_show_help()` |
| `mcp_xcf_grant_permission` | Grant permissions | `mcp_xcf_grant_permission()` |
| `mcp_xcf_run_project` | Run project | `mcp_xcf_run_project()` |
| `mcp_xcf_build_project` | Build project | `mcp_xcf_build_project()` |
| `mcp_xcf_show_current_project` | Show project | `mcp_xcf_show_current_project()` |
| `mcp_xcf_show_env` | Show env vars | `mcp_xcf_show_env()` |
| `mcp_xcf_show_folder` | Show directory | `mcp_xcf_show_folder()` |
| `mcp_xcf_list_projects` | List projects | `mcp_xcf_list_projects()` |
| `mcp_xcf_select_project` | Select project | `mcp_xcf_select_project(projectNumber=1)` |
| `mcp_xcf_analyze_swift_code` | Analyze code | `mcp_xcf_analyze_swift_code(filePath="main.swift")` |

## üöÄ Quick Workflow Examples

### Basic Project Workflow
```
use_xcf
xcf pwd     # Check current directory
cd_dir .    # Confirm directory
show
open 1
build
run
```

### Code Analysis Workflow
```
use_xcf
cd_dir .    # Ensure correct context
current
snippet main.swift
lz main.swift
build
```

### File Manipulation Workflow
```
use_xcf
xcf pwd     # Check current directory
read_dir .
read_file main.swift
edit_file main.swift 10 15 "// Updated code"
build
```

## üîí Security & Performance Tips
- Always activate XCF before operations
- Use specific file paths
- Leverage smart path resolution
- Implement error handling
- Use code analysis before major changes

## üîç Directory Management Tips
- Always use `xcf pwd` before operations
- OR 'cd_dir .` to confirm current directory
- Verify path before file/directory actions

---

Created by XCodeFreeze Automation - Swift Development at Light Speed! üöÄ
